// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SSG.Web.Controllers
{
    public partial class BackwardCompatibility1XController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected BackwardCompatibility1XController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectNewsItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectNewsItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectTopic()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectTopic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectForumGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForumGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectForum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectForumTopic()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForumTopic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RedirectUserProfile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectUserProfile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BackwardCompatibility1XController Actions { get { return MVC.BackwardCompatibility1X; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "BackwardCompatibility1X";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "BackwardCompatibility1X";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GeneralRedirect = "GeneralRedirect";
            public readonly string RedirectNewsItem = "RedirectNewsItem";
            public readonly string RedirectTopic = "RedirectTopic";
            public readonly string RedirectForumGroup = "RedirectForumGroup";
            public readonly string RedirectForum = "RedirectForum";
            public readonly string RedirectForumTopic = "RedirectForumTopic";
            public readonly string RedirectUserProfile = "RedirectUserProfile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GeneralRedirect = "GeneralRedirect";
            public const string RedirectNewsItem = "RedirectNewsItem";
            public const string RedirectTopic = "RedirectTopic";
            public const string RedirectForumGroup = "RedirectForumGroup";
            public const string RedirectForum = "RedirectForum";
            public const string RedirectForumTopic = "RedirectForumTopic";
            public const string RedirectUserProfile = "RedirectUserProfile";
        }


        static readonly ActionParamsClass_RedirectNewsItem s_params_RedirectNewsItem = new ActionParamsClass_RedirectNewsItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectNewsItem RedirectNewsItemParams { get { return s_params_RedirectNewsItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectNewsItem
        {
            public readonly string id = "id";
            public readonly string idIncludesSename = "idIncludesSename";
        }
        static readonly ActionParamsClass_RedirectTopic s_params_RedirectTopic = new ActionParamsClass_RedirectTopic();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectTopic RedirectTopicParams { get { return s_params_RedirectTopic; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectTopic
        {
            public readonly string id = "id";
            public readonly string idIncludesSename = "idIncludesSename";
        }
        static readonly ActionParamsClass_RedirectForumGroup s_params_RedirectForumGroup = new ActionParamsClass_RedirectForumGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectForumGroup RedirectForumGroupParams { get { return s_params_RedirectForumGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectForumGroup
        {
            public readonly string id = "id";
            public readonly string idIncludesSename = "idIncludesSename";
        }
        static readonly ActionParamsClass_RedirectForum s_params_RedirectForum = new ActionParamsClass_RedirectForum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectForum RedirectForumParams { get { return s_params_RedirectForum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectForum
        {
            public readonly string id = "id";
            public readonly string idIncludesSename = "idIncludesSename";
        }
        static readonly ActionParamsClass_RedirectForumTopic s_params_RedirectForumTopic = new ActionParamsClass_RedirectForumTopic();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectForumTopic RedirectForumTopicParams { get { return s_params_RedirectForumTopic; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectForumTopic
        {
            public readonly string id = "id";
            public readonly string idIncludesSename = "idIncludesSename";
        }
        static readonly ActionParamsClass_RedirectUserProfile s_params_RedirectUserProfile = new ActionParamsClass_RedirectUserProfile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectUserProfile RedirectUserProfileParams { get { return s_params_RedirectUserProfile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectUserProfile
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_BackwardCompatibility1XController : SSG.Web.Controllers.BackwardCompatibility1XController
    {
        public T4MVC_BackwardCompatibility1XController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GeneralRedirectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GeneralRedirect()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GeneralRedirect);
            GeneralRedirectOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RedirectNewsItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool idIncludesSename);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectNewsItem(string id, bool idIncludesSename)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectNewsItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idIncludesSename", idIncludesSename);
            RedirectNewsItemOverride(callInfo, id, idIncludesSename);
            return callInfo;
        }

        [NonAction]
        partial void RedirectTopicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool idIncludesSename);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectTopic(string id, bool idIncludesSename)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectTopic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idIncludesSename", idIncludesSename);
            RedirectTopicOverride(callInfo, id, idIncludesSename);
            return callInfo;
        }

        [NonAction]
        partial void RedirectForumGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool idIncludesSename);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectForumGroup(string id, bool idIncludesSename)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForumGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idIncludesSename", idIncludesSename);
            RedirectForumGroupOverride(callInfo, id, idIncludesSename);
            return callInfo;
        }

        [NonAction]
        partial void RedirectForumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool idIncludesSename);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectForum(string id, bool idIncludesSename)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idIncludesSename", idIncludesSename);
            RedirectForumOverride(callInfo, id, idIncludesSename);
            return callInfo;
        }

        [NonAction]
        partial void RedirectForumTopicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool idIncludesSename);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectForumTopic(string id, bool idIncludesSename)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectForumTopic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "idIncludesSename", idIncludesSename);
            RedirectForumTopicOverride(callInfo, id, idIncludesSename);
            return callInfo;
        }

        [NonAction]
        partial void RedirectUserProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult RedirectUserProfile(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RedirectUserProfile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RedirectUserProfileOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
