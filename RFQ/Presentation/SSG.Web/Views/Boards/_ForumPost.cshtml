@model ForumPostModel
@using SSG.Services.Users;
@using SSG.Services.Forums;
@using SSG.Services.Seo;
@using SSG.Web.Models.Boards;
@Html.Raw(String.Format("<a name=\"{0}\"></a>", @Model.Id))
<div class="forum-post" id="@Html.Encode(String.Format("post{0}", @Model.Id))">
    <div class="post-info">
        <div class="manage">
            @if (Model.IsCurrentUserAllowedToEditPost)
            {                
                @Html.RouteLink(@T("Forum.EditPost").Text, "PostEdit", new { id = @Model.Id }, new { @class = "edit-post-link-button" })
            }
            @if (Model.IsCurrentUserAllowedToDeletePost)
            {
                @Html.RouteLink(@T("Forum.DeletePost").Text, "PostDelete", new { id = @Model.Id }, new { onClick = String.Format("return confirm('{0}');", @T("Common.AreYouSure").Text), @class = "delete-post-link-button" })
            }
        </div>
        <div class="user-info">
            @if (@Model.UserId > 0)
            {
                if (Model.AllowViewingProfiles && !Model.IsUserGuest)
                {
                @Html.RouteLink(Model.UserName, "UserProfile", new { id = Model.UserId }, new { @class = "username" })
                }
                else
                {                    
                <span class="username">@Model.UserName</span>
                }
            }
            @if (!String.IsNullOrEmpty(Model.UserAvatarUrl))
            {
                <div class="avatar">
                    <img src="@(Model.UserAvatarUrl)" class="avatar-img" alt="Avatar" />
                </div>
            }
            <div class="user-stats">
                @if (Model.IsUserForumModerator)
                {
                    <div class="status">
                        @T("Forum.Status"): <span class="stat-value">@T("Forum.Moderator")</span>
                    </div>
                }
                @if (Model.ShowUsersPostCount)
                {
                    <div class="totalposts">
                        @T("Forum.TotalPosts"): <span class="stat-value">
                            @Model.ForumPostCount</span>
                    </div>
                }
                @if (Model.ShowUsersJoinDate && !Model.IsUserGuest)
                {
                    <div class="joined">
                        @T("Forum.Joined"): <span class="stat-value">@Model.UserJoinDate.ToString("d")</span>
                    </div>
                }
                @if (Model.ShowUsersLocation && !Model.IsUserGuest & !String.IsNullOrEmpty(Model.UserLocation))
                {
                    <div class="location">
                        @T("Forum.Location"): <span class="stat-value">@Model.UserLocation</span>
                    </div>
                }
                @if (Model.AllowPrivateMessages && !Model.IsUserGuest)
                {
                    <div class="send-pm-box">
                        @Html.RouteLink(T("Forum.PrivateMessages.PM").Text, "SendPM", new { toUserId = @Model.UserId }, new { @class = "pm-link-button" })
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="post-content">
        <div class="posttime">
            @T("Forum.Posted"): <span class="stat-value">@Model.PostCreatedOnStr</span>
            @Html.RouteLink(@T("Forum.QuotePost").Text, "PostCreateQuote", new { id = @Model.ForumTopicId, quote = @Model.Id }, new { @class = "quote-post-link-button" })
            @if (@Model.CurrentTopicPage > 1)
            {                
                @Html.RouteLink(String.Format("#{0}", @Model.Id.ToString()), "TopicSlugPaged", "http", string.Empty, @Model.Id.ToString(), new { id = @Model.ForumTopicId, slug = @Model.ForumTopicSeName, page = @Model.CurrentTopicPage }, new { @class = "post-link", title = @T("Forum.PostLinkTitle") })
            }
            else
            {                
                @Html.RouteLink(String.Format("#{0}", @Model.Id.ToString()), "TopicSlug", "http", string.Empty, @Model.Id.ToString(), new { id = @Model.ForumTopicId, slug = @Model.ForumTopicSeName }, new { @class = "post-link", title = @T("Forum.PostLinkTitle") })
            }
        </div>
        <div class="post-body">
            <div class="posttext">
                @Html.Raw(@Model.FormattedText)
            </div>
            @Html.Hidden("Id", @Model.Id)
        </div>
        @if (Model.SignaturesEnabled & !String.IsNullOrEmpty(Model.FormattedSignature))
        {            
            <div class="signature">
                @Html.Raw(@Model.FormattedSignature)
            </div>
        }
    </div>
    <div class="clear">
    </div>
</div>
