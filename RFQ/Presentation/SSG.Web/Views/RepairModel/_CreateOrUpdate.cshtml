@model RepairModelModel
@using SSG.Web.Models.Fracas;
@using SSG.Core.Infrastructure;
@using System.Globalization;

@if (!ViewData.ModelState.IsValid)
{
    <div class="row-fluid">
        <div class="span12">
            <div class="alert alert-block alert-error">
                <h4>Error!</h4>
                <p>@Html.ValidationSummary(true, T("FRACAS.Message.EntryUnsucccessful").Text)</p>
            </div>
        </div>
    </div>
    <div class="clearfix">&nbsp;</div>
}

@Html.HiddenFor(model => model.Id)
<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="span6">
                <div class="row-fluid">
                    <div class="span12">
                        <div class="control-group">
                            @Html.LabelFor(model => model.Code, true)
                            <div class="controls">
                                @Html.TextBoxFor(model => model.Code, new { @class = "required-mark input-medium", required = "required", autofocus="autofocus", style = "text-transform: uppercase" })
                                @Html.ValidationMessageFor(model => model.Code, string.Empty, new { @class="validation-newline"})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <div class="control-group">
                            @Html.LabelFor(model => model.ResponsibleDivisionCode, true)
                            <div class="controls">
                                @Html.TextBoxFor(model => model.ResponsibleDivisionCode, new { @class = "input-medium", style = "text-transform: uppercase" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <div class="control-group">
                            @Html.LabelFor(model => model.PrimaryOrderCenter, true)
                            <div class="controls">
                                @Html.TextBoxFor(model => model.PrimaryOrderCenter, new { @class = "input-medium", style = "text-transform: uppercase" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <div class="control-group">
                            @Html.LabelFor(model => model.PrimaryRepairCenter, true)
                            <div class="controls">
                                @Html.TextBoxFor(model => model.PrimaryRepairCenter, new { @class = "input-medium", style = "text-transform: uppercase" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="span6">
            </div>
        </div>
    </div>
</div>