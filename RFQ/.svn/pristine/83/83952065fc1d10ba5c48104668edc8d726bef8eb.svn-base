// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SSG.Web.Controllers
{
    public partial class BoardsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected BoardsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Forum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Forum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumRss()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumRss);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumWatch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumWatch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Topic()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TopicWatch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicWatch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TopicMove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicMove);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TopicDelete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TopicCreate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicCreate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TopicEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PostDelete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PostCreate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostCreate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PostEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Search()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LastPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LastPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumBreadcrumb()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumBreadcrumb);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BoardsController Actions { get { return MVC.Boards; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Boards";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Boards";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ActiveDiscussionsSmall = "ActiveDiscussionsSmall";
            public readonly string ActiveDiscussions = "ActiveDiscussions";
            public readonly string ActiveDiscussionsRss = "ActiveDiscussionsRss";
            public readonly string ForumGroup = "ForumGroup";
            public readonly string Forum = "Forum";
            public readonly string ForumRss = "ForumRss";
            public readonly string ForumWatch = "ForumWatch";
            public readonly string Topic = "Topic";
            public readonly string TopicWatch = "TopicWatch";
            public readonly string TopicMove = "TopicMove";
            public readonly string TopicDelete = "TopicDelete";
            public readonly string TopicCreate = "TopicCreate";
            public readonly string TopicEdit = "TopicEdit";
            public readonly string PostDelete = "PostDelete";
            public readonly string PostCreate = "PostCreate";
            public readonly string PostEdit = "PostEdit";
            public readonly string Search = "Search";
            public readonly string LastPost = "LastPost";
            public readonly string ForumBreadcrumb = "ForumBreadcrumb";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ActiveDiscussionsSmall = "ActiveDiscussionsSmall";
            public const string ActiveDiscussions = "ActiveDiscussions";
            public const string ActiveDiscussionsRss = "ActiveDiscussionsRss";
            public const string ForumGroup = "ForumGroup";
            public const string Forum = "Forum";
            public const string ForumRss = "ForumRss";
            public const string ForumWatch = "ForumWatch";
            public const string Topic = "Topic";
            public const string TopicWatch = "TopicWatch";
            public const string TopicMove = "TopicMove";
            public const string TopicDelete = "TopicDelete";
            public const string TopicCreate = "TopicCreate";
            public const string TopicEdit = "TopicEdit";
            public const string PostDelete = "PostDelete";
            public const string PostCreate = "PostCreate";
            public const string PostEdit = "PostEdit";
            public const string Search = "Search";
            public const string LastPost = "LastPost";
            public const string ForumBreadcrumb = "ForumBreadcrumb";
        }


        static readonly ActionParamsClass_ActiveDiscussions s_params_ActiveDiscussions = new ActionParamsClass_ActiveDiscussions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActiveDiscussions ActiveDiscussionsParams { get { return s_params_ActiveDiscussions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActiveDiscussions
        {
            public readonly string forumId = "forumId";
        }
        static readonly ActionParamsClass_ActiveDiscussionsRss s_params_ActiveDiscussionsRss = new ActionParamsClass_ActiveDiscussionsRss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActiveDiscussionsRss ActiveDiscussionsRssParams { get { return s_params_ActiveDiscussionsRss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActiveDiscussionsRss
        {
            public readonly string forumId = "forumId";
        }
        static readonly ActionParamsClass_ForumGroup s_params_ForumGroup = new ActionParamsClass_ForumGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumGroup ForumGroupParams { get { return s_params_ForumGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumGroup
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Forum s_params_Forum = new ActionParamsClass_Forum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Forum ForumParams { get { return s_params_Forum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Forum
        {
            public readonly string id = "id";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_ForumRss s_params_ForumRss = new ActionParamsClass_ForumRss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumRss ForumRssParams { get { return s_params_ForumRss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumRss
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ForumWatch s_params_ForumWatch = new ActionParamsClass_ForumWatch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumWatch ForumWatchParams { get { return s_params_ForumWatch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumWatch
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Topic s_params_Topic = new ActionParamsClass_Topic();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Topic TopicParams { get { return s_params_Topic; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Topic
        {
            public readonly string id = "id";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_TopicWatch s_params_TopicWatch = new ActionParamsClass_TopicWatch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopicWatch TopicWatchParams { get { return s_params_TopicWatch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopicWatch
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_TopicMove s_params_TopicMove = new ActionParamsClass_TopicMove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopicMove TopicMoveParams { get { return s_params_TopicMove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopicMove
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_TopicDelete s_params_TopicDelete = new ActionParamsClass_TopicDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopicDelete TopicDeleteParams { get { return s_params_TopicDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopicDelete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_TopicCreate s_params_TopicCreate = new ActionParamsClass_TopicCreate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopicCreate TopicCreateParams { get { return s_params_TopicCreate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopicCreate
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_TopicEdit s_params_TopicEdit = new ActionParamsClass_TopicEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopicEdit TopicEditParams { get { return s_params_TopicEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopicEdit
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_PostDelete s_params_PostDelete = new ActionParamsClass_PostDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PostDelete PostDeleteParams { get { return s_params_PostDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PostDelete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_PostCreate s_params_PostCreate = new ActionParamsClass_PostCreate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PostCreate PostCreateParams { get { return s_params_PostCreate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PostCreate
        {
            public readonly string id = "id";
            public readonly string quote = "quote";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_PostEdit s_params_PostEdit = new ActionParamsClass_PostEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PostEdit PostEditParams { get { return s_params_PostEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PostEdit
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string searchterms = "searchterms";
            public readonly string adv = "adv";
            public readonly string forumId = "forumId";
            public readonly string within = "within";
            public readonly string limitDays = "limitDays";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_LastPost s_params_LastPost = new ActionParamsClass_LastPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LastPost LastPostParams { get { return s_params_LastPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LastPost
        {
            public readonly string forumPostId = "forumPostId";
            public readonly string showTopic = "showTopic";
        }
        static readonly ActionParamsClass_ForumBreadcrumb s_params_ForumBreadcrumb = new ActionParamsClass_ForumBreadcrumb();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumBreadcrumb ForumBreadcrumbParams { get { return s_params_ForumBreadcrumb; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumBreadcrumb
        {
            public readonly string forumGroupId = "forumGroupId";
            public readonly string forumId = "forumId";
            public readonly string forumTopicId = "forumTopicId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ActiveTopics = "_ActiveTopics";
                public readonly string _ActiveTopics_Mobile = "_ActiveTopics.Mobile";
                public readonly string _CreateUpdatePost = "_CreateUpdatePost";
                public readonly string _CreateUpdatePost_Mobile = "_CreateUpdatePost.Mobile";
                public readonly string _CreateUpdateTopic = "_CreateUpdateTopic";
                public readonly string _CreateUpdateTopic_Mobile = "_CreateUpdateTopic.Mobile";
                public readonly string _ForumGroup = "_ForumGroup";
                public readonly string _ForumGroup_Mobile = "_ForumGroup.Mobile";
                public readonly string _ForumPost = "_ForumPost";
                public readonly string _ForumPost_Mobile = "_ForumPost.Mobile";
                public readonly string _SearchBox = "_SearchBox";
                public readonly string _SearchBox_Mobile = "_SearchBox.Mobile";
                public readonly string ActiveDiscussions = "ActiveDiscussions";
                public readonly string ActiveDiscussions_Mobile = "ActiveDiscussions.Mobile";
                public readonly string ActiveDiscussionsSmall = "ActiveDiscussionsSmall";
                public readonly string Forum = "Forum";
                public readonly string Forum_Mobile = "Forum.Mobile";
                public readonly string ForumBreadcrumb = "ForumBreadcrumb";
                public readonly string ForumGroup = "ForumGroup";
                public readonly string ForumGroup_Mobile = "ForumGroup.Mobile";
                public readonly string Index = "Index";
                public readonly string Index_Mobile = "Index.Mobile";
                public readonly string LastPost = "LastPost";
                public readonly string PostCreate = "PostCreate";
                public readonly string PostCreate_Mobile = "PostCreate.Mobile";
                public readonly string PostEdit = "PostEdit";
                public readonly string PostEdit_Mobile = "PostEdit.Mobile";
                public readonly string Search = "Search";
                public readonly string Search_Mobile = "Search.Mobile";
                public readonly string Topic = "Topic";
                public readonly string Topic_Mobile = "Topic.Mobile";
                public readonly string TopicCreate = "TopicCreate";
                public readonly string TopicCreate_Mobile = "TopicCreate.Mobile";
                public readonly string TopicEdit = "TopicEdit";
                public readonly string TopicEdit_Mobile = "TopicEdit.Mobile";
                public readonly string TopicMove = "TopicMove";
                public readonly string TopicMove_Mobile = "TopicMove.Mobile";
            }
            public readonly string _ActiveTopics = "~/Views/Boards/_ActiveTopics.cshtml";
            public readonly string _ActiveTopics_Mobile = "~/Views/Boards/_ActiveTopics.Mobile.cshtml";
            public readonly string _CreateUpdatePost = "~/Views/Boards/_CreateUpdatePost.cshtml";
            public readonly string _CreateUpdatePost_Mobile = "~/Views/Boards/_CreateUpdatePost.Mobile.cshtml";
            public readonly string _CreateUpdateTopic = "~/Views/Boards/_CreateUpdateTopic.cshtml";
            public readonly string _CreateUpdateTopic_Mobile = "~/Views/Boards/_CreateUpdateTopic.Mobile.cshtml";
            public readonly string _ForumGroup = "~/Views/Boards/_ForumGroup.cshtml";
            public readonly string _ForumGroup_Mobile = "~/Views/Boards/_ForumGroup.Mobile.cshtml";
            public readonly string _ForumPost = "~/Views/Boards/_ForumPost.cshtml";
            public readonly string _ForumPost_Mobile = "~/Views/Boards/_ForumPost.Mobile.cshtml";
            public readonly string _SearchBox = "~/Views/Boards/_SearchBox.cshtml";
            public readonly string _SearchBox_Mobile = "~/Views/Boards/_SearchBox.Mobile.cshtml";
            public readonly string ActiveDiscussions = "~/Views/Boards/ActiveDiscussions.cshtml";
            public readonly string ActiveDiscussions_Mobile = "~/Views/Boards/ActiveDiscussions.Mobile.cshtml";
            public readonly string ActiveDiscussionsSmall = "~/Views/Boards/ActiveDiscussionsSmall.cshtml";
            public readonly string Forum = "~/Views/Boards/Forum.cshtml";
            public readonly string Forum_Mobile = "~/Views/Boards/Forum.Mobile.cshtml";
            public readonly string ForumBreadcrumb = "~/Views/Boards/ForumBreadcrumb.cshtml";
            public readonly string ForumGroup = "~/Views/Boards/ForumGroup.cshtml";
            public readonly string ForumGroup_Mobile = "~/Views/Boards/ForumGroup.Mobile.cshtml";
            public readonly string Index = "~/Views/Boards/Index.cshtml";
            public readonly string Index_Mobile = "~/Views/Boards/Index.Mobile.cshtml";
            public readonly string LastPost = "~/Views/Boards/LastPost.cshtml";
            public readonly string PostCreate = "~/Views/Boards/PostCreate.cshtml";
            public readonly string PostCreate_Mobile = "~/Views/Boards/PostCreate.Mobile.cshtml";
            public readonly string PostEdit = "~/Views/Boards/PostEdit.cshtml";
            public readonly string PostEdit_Mobile = "~/Views/Boards/PostEdit.Mobile.cshtml";
            public readonly string Search = "~/Views/Boards/Search.cshtml";
            public readonly string Search_Mobile = "~/Views/Boards/Search.Mobile.cshtml";
            public readonly string Topic = "~/Views/Boards/Topic.cshtml";
            public readonly string Topic_Mobile = "~/Views/Boards/Topic.Mobile.cshtml";
            public readonly string TopicCreate = "~/Views/Boards/TopicCreate.cshtml";
            public readonly string TopicCreate_Mobile = "~/Views/Boards/TopicCreate.Mobile.cshtml";
            public readonly string TopicEdit = "~/Views/Boards/TopicEdit.cshtml";
            public readonly string TopicEdit_Mobile = "~/Views/Boards/TopicEdit.Mobile.cshtml";
            public readonly string TopicMove = "~/Views/Boards/TopicMove.cshtml";
            public readonly string TopicMove_Mobile = "~/Views/Boards/TopicMove.Mobile.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_BoardsController : SSG.Web.Controllers.BoardsController
    {
        public T4MVC_BoardsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ActiveDiscussionsSmallOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ActiveDiscussionsSmall()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActiveDiscussionsSmall);
            ActiveDiscussionsSmallOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ActiveDiscussionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int forumId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ActiveDiscussions(int forumId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActiveDiscussions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumId", forumId);
            ActiveDiscussionsOverride(callInfo, forumId);
            return callInfo;
        }

        [NonAction]
        partial void ActiveDiscussionsRssOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int forumId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ActiveDiscussionsRss(int forumId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActiveDiscussionsRss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumId", forumId);
            ActiveDiscussionsRssOverride(callInfo, forumId);
            return callInfo;
        }

        [NonAction]
        partial void ForumGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumGroup(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ForumGroupOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ForumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Forum(int id, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Forum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ForumOverride(callInfo, id, page);
            return callInfo;
        }

        [NonAction]
        partial void ForumRssOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumRss(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumRss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ForumRssOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ForumWatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumWatch(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumWatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ForumWatchOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Topic(int id, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Topic);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            TopicOverride(callInfo, id, page);
            return callInfo;
        }

        [NonAction]
        partial void TopicWatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicWatch(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicWatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicWatchOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicMoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicMove(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicMove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicMoveOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicMoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.Boards.TopicMoveModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicMove(SSG.Web.Models.Boards.TopicMoveModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicMove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            TopicMoveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void TopicDeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicDelete(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicDeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicCreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicCreate(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicCreate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicCreateOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicCreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.Boards.EditForumTopicModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicCreate(SSG.Web.Models.Boards.EditForumTopicModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicCreate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            TopicCreateOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void TopicEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicEdit(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TopicEditOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TopicEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.Boards.EditForumTopicModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult TopicEdit(SSG.Web.Models.Boards.EditForumTopicModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TopicEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            TopicEditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void PostDeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PostDelete(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PostDeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PostCreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int? quote);

        [NonAction]
        public override System.Web.Mvc.ActionResult PostCreate(int id, int? quote)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostCreate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "quote", quote);
            PostCreateOverride(callInfo, id, quote);
            return callInfo;
        }

        [NonAction]
        partial void PostCreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.Boards.EditForumPostModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult PostCreate(SSG.Web.Models.Boards.EditForumPostModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostCreate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PostCreateOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void PostEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PostEdit(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PostEditOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PostEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.Boards.EditForumPostModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult PostEdit(SSG.Web.Models.Boards.EditForumPostModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PostEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PostEditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string searchterms, bool? adv, string forumId, string within, string limitDays, int page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(string searchterms, bool? adv, string forumId, string within, string limitDays, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchterms", searchterms);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "adv", adv);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumId", forumId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "within", within);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limitDays", limitDays);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            SearchOverride(callInfo, searchterms, adv, forumId, within, limitDays, page);
            return callInfo;
        }

        [NonAction]
        partial void LastPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int forumPostId, bool showTopic);

        [NonAction]
        public override System.Web.Mvc.ActionResult LastPost(int forumPostId, bool showTopic)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LastPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumPostId", forumPostId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showTopic", showTopic);
            LastPostOverride(callInfo, forumPostId, showTopic);
            return callInfo;
        }

        [NonAction]
        partial void ForumBreadcrumbOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? forumGroupId, int? forumId, int? forumTopicId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumBreadcrumb(int? forumGroupId, int? forumId, int? forumTopicId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumBreadcrumb);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumGroupId", forumGroupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumId", forumId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forumTopicId", forumTopicId);
            ForumBreadcrumbOverride(callInfo, forumGroupId, forumId, forumTopicId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
