// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SSG.Web.Controllers
{
    public partial class UserController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected UserController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Login()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RegisterResult()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegisterResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckUsernameAvailability()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckUsernameAvailability);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AccountActivation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AccountActivation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddressDelete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddressEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadAvatar()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAvatar);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveAvatar()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveAvatar);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PasswordRecoverySend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoverySend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PasswordRecoveryConfirm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoveryConfirm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PasswordRecoveryConfirmPOST()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoveryConfirmPOST);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumSubscriptions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumSubscriptions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForumSubscriptionsPOST()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumSubscriptionsPOST);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteForumSubscription()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteForumSubscription);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public UserController Actions { get { return MVC.User; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "User";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "User";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Login = "Login";
            public readonly string Register = "Register";
            public readonly string RegisterResult = "RegisterResult";
            public readonly string CheckUsernameAvailability = "CheckUsernameAvailability";
            public readonly string Logout = "Logout";
            public readonly string AccountActivation = "AccountActivation";
            public readonly string MyAccount = "MyAccount";
            public readonly string Info = "Info";
            public readonly string Addresses = "Addresses";
            public readonly string AddressDelete = "AddressDelete";
            public readonly string AddressAdd = "AddressAdd";
            public readonly string AddressEdit = "AddressEdit";
            public readonly string ChangePassword = "ChangePassword";
            public readonly string Avatar = "Avatar";
            public readonly string UploadAvatar = "Avatar";
            public readonly string RemoveAvatar = "Avatar";
            public readonly string PasswordRecovery = "PasswordRecovery";
            public readonly string PasswordRecoverySend = "PasswordRecovery";
            public readonly string PasswordRecoveryConfirm = "PasswordRecoveryConfirm";
            public readonly string PasswordRecoveryConfirmPOST = "PasswordRecoveryConfirm";
            public readonly string ForumSubscriptions = "ForumSubscriptions";
            public readonly string ForumSubscriptionsPOST = "ForumSubscriptions";
            public readonly string DeleteForumSubscription = "DeleteForumSubscription";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Login = "Login";
            public const string Register = "Register";
            public const string RegisterResult = "RegisterResult";
            public const string CheckUsernameAvailability = "CheckUsernameAvailability";
            public const string Logout = "Logout";
            public const string AccountActivation = "AccountActivation";
            public const string MyAccount = "MyAccount";
            public const string Info = "Info";
            public const string Addresses = "Addresses";
            public const string AddressDelete = "AddressDelete";
            public const string AddressAdd = "AddressAdd";
            public const string AddressEdit = "AddressEdit";
            public const string ChangePassword = "ChangePassword";
            public const string Avatar = "Avatar";
            public const string UploadAvatar = "Avatar";
            public const string RemoveAvatar = "Avatar";
            public const string PasswordRecovery = "PasswordRecovery";
            public const string PasswordRecoverySend = "PasswordRecovery";
            public const string PasswordRecoveryConfirm = "PasswordRecoveryConfirm";
            public const string PasswordRecoveryConfirmPOST = "PasswordRecoveryConfirm";
            public const string ForumSubscriptions = "ForumSubscriptions";
            public const string ForumSubscriptionsPOST = "ForumSubscriptions";
            public const string DeleteForumSubscription = "DeleteForumSubscription";
        }


        static readonly ActionParamsClass_Login s_params_Login = new ActionParamsClass_Login();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Login LoginParams { get { return s_params_Login; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Login
        {
            public readonly string checkoutAsGuest = "checkoutAsGuest";
            public readonly string model = "model";
            public readonly string returnUrl = "returnUrl";
            public readonly string captchaValid = "captchaValid";
        }
        static readonly ActionParamsClass_Register s_params_Register = new ActionParamsClass_Register();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Register RegisterParams { get { return s_params_Register; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Register
        {
            public readonly string model = "model";
            public readonly string captchaValid = "captchaValid";
        }
        static readonly ActionParamsClass_RegisterResult s_params_RegisterResult = new ActionParamsClass_RegisterResult();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RegisterResult RegisterResultParams { get { return s_params_RegisterResult; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RegisterResult
        {
            public readonly string resultId = "resultId";
        }
        static readonly ActionParamsClass_CheckUsernameAvailability s_params_CheckUsernameAvailability = new ActionParamsClass_CheckUsernameAvailability();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckUsernameAvailability CheckUsernameAvailabilityParams { get { return s_params_CheckUsernameAvailability; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckUsernameAvailability
        {
            public readonly string username = "username";
        }
        static readonly ActionParamsClass_AccountActivation s_params_AccountActivation = new ActionParamsClass_AccountActivation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AccountActivation AccountActivationParams { get { return s_params_AccountActivation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AccountActivation
        {
            public readonly string token = "token";
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_Info s_params_Info = new ActionParamsClass_Info();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Info InfoParams { get { return s_params_Info; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Info
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddressDelete s_params_AddressDelete = new ActionParamsClass_AddressDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddressDelete AddressDeleteParams { get { return s_params_AddressDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddressDelete
        {
            public readonly string addressId = "addressId";
        }
        static readonly ActionParamsClass_AddressAdd s_params_AddressAdd = new ActionParamsClass_AddressAdd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddressAdd AddressAddParams { get { return s_params_AddressAdd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddressAdd
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddressEdit s_params_AddressEdit = new ActionParamsClass_AddressEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddressEdit AddressEditParams { get { return s_params_AddressEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddressEdit
        {
            public readonly string addressId = "addressId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangePassword s_params_ChangePassword = new ActionParamsClass_ChangePassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangePassword ChangePasswordParams { get { return s_params_ChangePassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangePassword
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_UploadAvatar s_params_UploadAvatar = new ActionParamsClass_UploadAvatar();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadAvatar UploadAvatarParams { get { return s_params_UploadAvatar; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadAvatar
        {
            public readonly string model = "model";
            public readonly string uploadedFile = "uploadedFile";
        }
        static readonly ActionParamsClass_RemoveAvatar s_params_RemoveAvatar = new ActionParamsClass_RemoveAvatar();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveAvatar RemoveAvatarParams { get { return s_params_RemoveAvatar; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveAvatar
        {
            public readonly string model = "model";
            public readonly string uploadedFile = "uploadedFile";
        }
        static readonly ActionParamsClass_PasswordRecoverySend s_params_PasswordRecoverySend = new ActionParamsClass_PasswordRecoverySend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PasswordRecoverySend PasswordRecoverySendParams { get { return s_params_PasswordRecoverySend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PasswordRecoverySend
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_PasswordRecoveryConfirm s_params_PasswordRecoveryConfirm = new ActionParamsClass_PasswordRecoveryConfirm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PasswordRecoveryConfirm PasswordRecoveryConfirmParams { get { return s_params_PasswordRecoveryConfirm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PasswordRecoveryConfirm
        {
            public readonly string token = "token";
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_PasswordRecoveryConfirmPOST s_params_PasswordRecoveryConfirmPOST = new ActionParamsClass_PasswordRecoveryConfirmPOST();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PasswordRecoveryConfirmPOST PasswordRecoveryConfirmPOSTParams { get { return s_params_PasswordRecoveryConfirmPOST; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PasswordRecoveryConfirmPOST
        {
            public readonly string token = "token";
            public readonly string email = "email";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ForumSubscriptions s_params_ForumSubscriptions = new ActionParamsClass_ForumSubscriptions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumSubscriptions ForumSubscriptionsParams { get { return s_params_ForumSubscriptions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumSubscriptions
        {
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_ForumSubscriptionsPOST s_params_ForumSubscriptionsPOST = new ActionParamsClass_ForumSubscriptionsPOST();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForumSubscriptionsPOST ForumSubscriptionsPOSTParams { get { return s_params_ForumSubscriptionsPOST; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForumSubscriptionsPOST
        {
            public readonly string formCollection = "formCollection";
        }
        static readonly ActionParamsClass_DeleteForumSubscription s_params_DeleteForumSubscription = new ActionParamsClass_DeleteForumSubscription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteForumSubscription DeleteForumSubscriptionParams { get { return s_params_DeleteForumSubscription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteForumSubscription
        {
            public readonly string subscriptionId = "subscriptionId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _CheckUsernameAvailability = "_CheckUsernameAvailability";
                public readonly string _ExternalAuthentication_AssociateMessage = "_ExternalAuthentication.AssociateMessage";
                public readonly string _ExternalAuthentication_Errors = "_ExternalAuthentication.Errors";
                public readonly string AccountActivation = "AccountActivation";
                public readonly string AccountActivation_Mobile = "AccountActivation.Mobile";
                public readonly string AddressAdd = "AddressAdd";
                public readonly string AddressAdd_Mobile = "AddressAdd.Mobile";
                public readonly string AddressEdit = "AddressEdit";
                public readonly string AddressEdit_Mobile = "AddressEdit.Mobile";
                public readonly string Addresses = "Addresses";
                public readonly string Addresses_Mobile = "Addresses.Mobile";
                public readonly string Avatar = "Avatar";
                public readonly string Avatar_Mobile = "Avatar.Mobile";
                public readonly string ChangePassword = "ChangePassword";
                public readonly string ChangePassword_Mobile = "ChangePassword.Mobile";
                public readonly string ForumSubscriptions = "ForumSubscriptions";
                public readonly string ForumSubscriptions_Mobile = "ForumSubscriptions.Mobile";
                public readonly string Info = "Info";
                public readonly string Info_Mobile = "Info.Mobile";
                public readonly string Login = "Login";
                public readonly string Login_Mobile = "Login.Mobile";
                public readonly string MyAccount = "MyAccount";
                public readonly string MyAccount_Mobile = "MyAccount.Mobile";
                public readonly string MyAccountNavigation = "MyAccountNavigation";
                public readonly string MyAccountNavigation_Mobile = "MyAccountNavigation.Mobile";
                public readonly string PasswordRecovery = "PasswordRecovery";
                public readonly string PasswordRecovery_Mobile = "PasswordRecovery.Mobile";
                public readonly string PasswordRecoveryConfirm = "PasswordRecoveryConfirm";
                public readonly string PasswordRecoveryConfirm_Mobile = "PasswordRecoveryConfirm.Mobile";
                public readonly string Register = "Register";
                public readonly string Register_Mobile = "Register.Mobile";
                public readonly string RegisterResult = "RegisterResult";
                public readonly string RegisterResult_Mobile = "RegisterResult.Mobile";
                public readonly string UserAgreement = "UserAgreement";
                public readonly string UserAgreement_Mobile = "UserAgreement.Mobile";
            }
            public readonly string _CheckUsernameAvailability = "~/Views/User/_CheckUsernameAvailability.cshtml";
            public readonly string _ExternalAuthentication_AssociateMessage = "~/Views/User/_ExternalAuthentication.AssociateMessage.cshtml";
            public readonly string _ExternalAuthentication_Errors = "~/Views/User/_ExternalAuthentication.Errors.cshtml";
            public readonly string AccountActivation = "~/Views/User/AccountActivation.cshtml";
            public readonly string AccountActivation_Mobile = "~/Views/User/AccountActivation.Mobile.cshtml";
            public readonly string AddressAdd = "~/Views/User/AddressAdd.cshtml";
            public readonly string AddressAdd_Mobile = "~/Views/User/AddressAdd.Mobile.cshtml";
            public readonly string AddressEdit = "~/Views/User/AddressEdit.cshtml";
            public readonly string AddressEdit_Mobile = "~/Views/User/AddressEdit.Mobile.cshtml";
            public readonly string Addresses = "~/Views/User/Addresses.cshtml";
            public readonly string Addresses_Mobile = "~/Views/User/Addresses.Mobile.cshtml";
            public readonly string Avatar = "~/Views/User/Avatar.cshtml";
            public readonly string Avatar_Mobile = "~/Views/User/Avatar.Mobile.cshtml";
            public readonly string ChangePassword = "~/Views/User/ChangePassword.cshtml";
            public readonly string ChangePassword_Mobile = "~/Views/User/ChangePassword.Mobile.cshtml";
            public readonly string ForumSubscriptions = "~/Views/User/ForumSubscriptions.cshtml";
            public readonly string ForumSubscriptions_Mobile = "~/Views/User/ForumSubscriptions.Mobile.cshtml";
            public readonly string Info = "~/Views/User/Info.cshtml";
            public readonly string Info_Mobile = "~/Views/User/Info.Mobile.cshtml";
            public readonly string Login = "~/Views/User/Login.cshtml";
            public readonly string Login_Mobile = "~/Views/User/Login.Mobile.cshtml";
            public readonly string MyAccount = "~/Views/User/MyAccount.cshtml";
            public readonly string MyAccount_Mobile = "~/Views/User/MyAccount.Mobile.cshtml";
            public readonly string MyAccountNavigation = "~/Views/User/MyAccountNavigation.cshtml";
            public readonly string MyAccountNavigation_Mobile = "~/Views/User/MyAccountNavigation.Mobile.cshtml";
            public readonly string PasswordRecovery = "~/Views/User/PasswordRecovery.cshtml";
            public readonly string PasswordRecovery_Mobile = "~/Views/User/PasswordRecovery.Mobile.cshtml";
            public readonly string PasswordRecoveryConfirm = "~/Views/User/PasswordRecoveryConfirm.cshtml";
            public readonly string PasswordRecoveryConfirm_Mobile = "~/Views/User/PasswordRecoveryConfirm.Mobile.cshtml";
            public readonly string Register = "~/Views/User/Register.cshtml";
            public readonly string Register_Mobile = "~/Views/User/Register.Mobile.cshtml";
            public readonly string RegisterResult = "~/Views/User/RegisterResult.cshtml";
            public readonly string RegisterResult_Mobile = "~/Views/User/RegisterResult.Mobile.cshtml";
            public readonly string UserAgreement = "~/Views/User/UserAgreement.cshtml";
            public readonly string UserAgreement_Mobile = "~/Views/User/UserAgreement.Mobile.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_UserController : SSG.Web.Controllers.UserController
    {
        public T4MVC_UserController() : base(Dummy.Instance) { }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool? checkoutAsGuest);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(bool? checkoutAsGuest)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "checkoutAsGuest", checkoutAsGuest);
            LoginOverride(callInfo, checkoutAsGuest);
            return callInfo;
        }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.LoginModel model, string returnUrl, bool captchaValid);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(SSG.Web.Models.User.LoginModel model, string returnUrl, bool captchaValid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "captchaValid", captchaValid);
            LoginOverride(callInfo, model, returnUrl, captchaValid);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            RegisterOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.RegisterModel model, bool captchaValid);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register(SSG.Web.Models.User.RegisterModel model, bool captchaValid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "captchaValid", captchaValid);
            RegisterOverride(callInfo, model, captchaValid);
            return callInfo;
        }

        [NonAction]
        partial void RegisterResultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int resultId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RegisterResult(int resultId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegisterResult);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "resultId", resultId);
            RegisterResultOverride(callInfo, resultId);
            return callInfo;
        }

        [NonAction]
        partial void CheckUsernameAvailabilityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string username);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckUsernameAvailability(string username)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckUsernameAvailability);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "username", username);
            CheckUsernameAvailabilityOverride(callInfo, username);
            return callInfo;
        }

        [NonAction]
        partial void LogoutOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Logout()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Logout);
            LogoutOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AccountActivationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string token, string email);

        [NonAction]
        public override System.Web.Mvc.ActionResult AccountActivation(string token, string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AccountActivation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            AccountActivationOverride(callInfo, token, email);
            return callInfo;
        }

        [NonAction]
        partial void MyAccountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyAccount()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyAccount);
            MyAccountOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void InfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Info()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Info);
            InfoOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void InfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.UserInfoModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Info(SSG.Web.Models.User.UserInfoModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Info);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            InfoOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddressesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Addresses()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Addresses);
            AddressesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddressDeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int addressId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddressDelete(int addressId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "addressId", addressId);
            AddressDeleteOverride(callInfo, addressId);
            return callInfo;
        }

        [NonAction]
        partial void AddressAddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddressAdd()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressAdd);
            AddressAddOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddressAddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.UserAddressEditModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddressAdd(SSG.Web.Models.User.UserAddressEditModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressAdd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddressAddOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddressEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int addressId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddressEdit(int addressId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "addressId", addressId);
            AddressEditOverride(callInfo, addressId);
            return callInfo;
        }

        [NonAction]
        partial void AddressEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.UserAddressEditModel model, int addressId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddressEdit(SSG.Web.Models.User.UserAddressEditModel model, int addressId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddressEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "addressId", addressId);
            AddressEditOverride(callInfo, model, addressId);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ChangePasswordOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.ChangePasswordModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword(SSG.Web.Models.User.ChangePasswordModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ChangePasswordOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AvatarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Avatar()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Avatar);
            AvatarOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UploadAvatarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.UserAvatarModel model, System.Web.HttpPostedFileBase uploadedFile);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadAvatar(SSG.Web.Models.User.UserAvatarModel model, System.Web.HttpPostedFileBase uploadedFile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadAvatar);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uploadedFile", uploadedFile);
            UploadAvatarOverride(callInfo, model, uploadedFile);
            return callInfo;
        }

        [NonAction]
        partial void RemoveAvatarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.UserAvatarModel model, System.Web.HttpPostedFileBase uploadedFile);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveAvatar(SSG.Web.Models.User.UserAvatarModel model, System.Web.HttpPostedFileBase uploadedFile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveAvatar);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uploadedFile", uploadedFile);
            RemoveAvatarOverride(callInfo, model, uploadedFile);
            return callInfo;
        }

        [NonAction]
        partial void PasswordRecoveryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PasswordRecovery()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecovery);
            PasswordRecoveryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PasswordRecoverySendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, SSG.Web.Models.User.PasswordRecoveryModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult PasswordRecoverySend(SSG.Web.Models.User.PasswordRecoveryModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoverySend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PasswordRecoverySendOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void PasswordRecoveryConfirmOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string token, string email);

        [NonAction]
        public override System.Web.Mvc.ActionResult PasswordRecoveryConfirm(string token, string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoveryConfirm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            PasswordRecoveryConfirmOverride(callInfo, token, email);
            return callInfo;
        }

        [NonAction]
        partial void PasswordRecoveryConfirmPOSTOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string token, string email, SSG.Web.Models.User.PasswordRecoveryConfirmModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult PasswordRecoveryConfirmPOST(string token, string email, SSG.Web.Models.User.PasswordRecoveryConfirmModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PasswordRecoveryConfirmPOST);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            PasswordRecoveryConfirmPOSTOverride(callInfo, token, email, model);
            return callInfo;
        }

        [NonAction]
        partial void ForumSubscriptionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? page);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumSubscriptions(int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumSubscriptions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ForumSubscriptionsOverride(callInfo, page);
            return callInfo;
        }

        [NonAction]
        partial void ForumSubscriptionsPOSTOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formCollection);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForumSubscriptionsPOST(System.Web.Mvc.FormCollection formCollection)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForumSubscriptionsPOST);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formCollection", formCollection);
            ForumSubscriptionsPOSTOverride(callInfo, formCollection);
            return callInfo;
        }

        [NonAction]
        partial void DeleteForumSubscriptionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int subscriptionId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteForumSubscription(int subscriptionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteForumSubscription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subscriptionId", subscriptionId);
            DeleteForumSubscriptionOverride(callInfo, subscriptionId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
