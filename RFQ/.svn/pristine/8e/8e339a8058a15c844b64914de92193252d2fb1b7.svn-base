// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace SSG.Web.Controllers
{
    public partial class ErrorController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ErrorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ResourceNotFound()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResourceNotFound);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AcessDenied()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcessDenied);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ErrorController Actions { get { return MVC.Error; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Error";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Error";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ResourceNotFound = "ResourceNotFound";
            public readonly string AcessDenied = "AcessDenied";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ResourceNotFound = "ResourceNotFound";
            public const string AcessDenied = "AcessDenied";
        }


        static readonly ActionParamsClass_ResourceNotFound s_params_ResourceNotFound = new ActionParamsClass_ResourceNotFound();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ResourceNotFound ResourceNotFoundParams { get { return s_params_ResourceNotFound; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ResourceNotFound
        {
            public readonly string pageUrl = "pageUrl";
            public readonly string errorMessage = "errorMessage";
        }
        static readonly ActionParamsClass_AcessDenied s_params_AcessDenied = new ActionParamsClass_AcessDenied();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AcessDenied AcessDeniedParams { get { return s_params_AcessDenied; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AcessDenied
        {
            public readonly string pageUrl = "pageUrl";
            public readonly string errorMessage = "errorMessage";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AcessDenied = "AcessDenied";
                public readonly string ResourceNotFound = "ResourceNotFound";
            }
            public readonly string AcessDenied = "~/Views/Error/AcessDenied.cshtml";
            public readonly string ResourceNotFound = "~/Views/Error/ResourceNotFound.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ErrorController : SSG.Web.Controllers.ErrorController
    {
        public T4MVC_ErrorController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ResourceNotFoundOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string pageUrl, string errorMessage);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResourceNotFound(string pageUrl, string errorMessage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResourceNotFound);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageUrl", pageUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "errorMessage", errorMessage);
            ResourceNotFoundOverride(callInfo, pageUrl, errorMessage);
            return callInfo;
        }

        [NonAction]
        partial void AcessDeniedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string pageUrl, string errorMessage);

        [NonAction]
        public override System.Web.Mvc.ActionResult AcessDenied(string pageUrl, string errorMessage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcessDenied);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageUrl", pageUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "errorMessage", errorMessage);
            AcessDeniedOverride(callInfo, pageUrl, errorMessage);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
