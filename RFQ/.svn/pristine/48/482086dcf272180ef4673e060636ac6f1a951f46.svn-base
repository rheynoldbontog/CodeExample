<!-- done -->
@model ChangePasswordModel
@using SSG.Web.Models.User;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@section left
{
    @Html.Partial("MyAccountNavigation", Model.NavigationModel, new ViewDataDictionary())
}
@using (Html.BeginHorizontalForm())
{
    @Html.AntiForgeryToken()
    <div class="page account-page change-password-page">
        <div class="page-header">
            <h2>@T("Account.MyAccount") - @T("Account.ChangePassword")</h2>
        </div>
        <div class="page-body">
            @if (!ViewData.ModelState.IsValid)
            { 
                <div class="alert alert-block alert-error">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4>@T("Common.Warning")</h4>
                    <p>@Html.ValidationSummary(true)</p>
                </div>
            }
            @if (!String.IsNullOrEmpty(Model.Result))
            {
                <div class="clearfix"></div>
                <p class="text-info">
                    @Model.Result
                </p>
            }
            <div class="control-group">
                @Html.LabelFor(model => model.OldPassword, true)
                <div class="controls">
                    @Html.TextBoxFor(model => model.OldPassword, new { placeholder = T("Account.ChangePassword.Fields.OldPasword"), required = "required" })
                    @Html.RequiredHint()
                    @Html.ValidationMessageFor(model => model.OldPassword, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.NewPassword, true)
                <div class="controls">
                    @Html.EditorFor(model => model.NewPassword, new { placeholder = T("Account.ChangePassword.Fields.NewPasword"), required = "required" })
                    @Html.RequiredHint()
                    @Html.ValidationMessageFor(model => model.NewPassword, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.ConfirmNewPassword, true)
                <div class="controls">
                    @Html.EditorFor(model => model.ConfirmNewPassword, new { placeholder = T("Account.ChangePassword.Fields.ConfirmPasword"), required = "required" })
                    @Html.RequiredHint()
                    @Html.ValidationMessageFor(model => model.ConfirmNewPassword, string.Empty, new { @class = "help-inline" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-actions">
                <input type="submit" class="btn btn-primary change-password-button" value="@T("Account.ChangePassword.Button")" />
            </div>
        </div>
    </div>
}